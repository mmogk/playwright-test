import {test, expect} from '@playwright/test'

var homePage = 'http://localhost:3000';
var aboutPage = 'http://localhost:3000/about';
var gradesPage = 'http://localhost:3000/grades';

test.beforeAll(async () => {
    console.log('before tests');

})

test.afterAll(async () => {
    console.log('after tests');
    
})

test.describe('Head tag area', () => {
    test('Contains the head tag and its contents', async ({page}) => {
        //where it goes to first for the test
        await page.goto(homePage);
        await expect(page).toHaveTitle('Example #1');

        const metaDescription = page.locator('meta[name="description"]');
        await expect(metaDescription).toHaveAttribute('content', 'Generated by create next app')

        const linkIcon = page.locator('link[rel="icon"]');
        await expect(linkIcon).toHaveAttribute('href', '/favicon.ico');
    })
})

test.describe('Main content', () => {
    test('Should contains a heading welcome to my home page', async ({page}) => {
        await page.goto(homePage);
        await expect(page.locator('h1')).toContainText('Welcome to my home page');
    })
    test('Should contain a list to describe CRUD', async ({page}) => {
        await page.goto(homePage);
        await expect(page.locator('ul > li')).toContainText(["Create", "Read", "Update", "Delete"]);
    })
    
})
test.describe('Linking to another page', () => {
    test('Should contain a link to another page', async ({page}) => {
        await page.goto(homePage);
        await page.click('text=About Page');
        await expect(page).toHaveURL(aboutPage);
    })
    test('Should contain a link to grades page', async ({page}) => {
        await page.goto(homePage);
        await page.click('text=Grades Page');
        await expect(page).toHaveURL(gradesPage);
    })
    
})

test.describe('Button tests', () => {
    test('this is the info component', async ({page}) =>{
        await page.goto(homePage);
        await expect(page.locator('button')).toContainText("view all this info");
    })
})
test.describe('Footer tests', () => {
    test('should contain a footer on the home page', async ({page}) =>{
        await page.goto(homePage);
        await expect(page.locator('footer')).toContainText("in class example #1");
    })
})
test.describe("Check about page naviagtes to home page tests", () => {
    test('should navigate to the home page from the about page', async ({page}) =>{
        await page.goto(aboutPage);
        await page.click('text=Go Back');
        await expect(page).toHaveURL(homePage);
    })
})